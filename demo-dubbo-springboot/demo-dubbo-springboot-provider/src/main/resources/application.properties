#debug=true

# Spring boot application
spring.application.name = demo-service-provider
server.port = 9090
management.port = 9091


# Base packages to scan Dubbo Components (e.g @Service , @Reference)
dubbo.scan.basePackages  = com.jzg.demo.service.impl


# Dubbo Config properties
## ApplicationConfig Bean
dubbo.application.id = demo-service-provider
dubbo.application.name = demo-service-provider
dubbo.application.qos.port=22222
dubbo.application.qos.enable=true

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 12345
dubbo.protocol.status = server

#\u591A\u534F\u8BAE\u5C1A\u672A\u914D\u7F6E\uFF0C\u7A0D\u540E\u518D\u8BD5
#dubbo.config.multiple=true
#dubbo.protocols.dubbo.id = dubbo
#dubbo.protocols.dubbo.name = dubbo
#dubbo.protocols.dubbo.port = 12345
#dubbo.protocols.dubbo.status = server
#
#dubbo.protocols.hessian.id = hessian
#dubbo.protocols.hessian.name = hessian
#dubbo.protocols.hessian.port = 12346
#dubbo.protocols.hessian.status = server





## RegistryConfig Bean
dubbo.registry.id = jzg_registry
dubbo.registry.address = zookeeper://192.168.0.128:2181


dubbo.provider.version=1.0.0

dubbo.provider.threads=100
dubbo.provider.threadpool=fixed
dubbo.provider.accepts=1000
dubbo.provider.timeout=10000



# Dubbo Endpoint (default status is disable)
endpoints.dubbo.enabled = true

# Dubbo Health
## StatusChecker Name defaults (default : "memory", "load" )
management.health.dubbo.status.defaults = memory
## StatusChecker Name extras (default : empty )
management.health.dubbo.status.extras = load,threadpool




#\u6570\u636E\u5E93\u8FDE\u63A5
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/test_db?useUnicode=true&characterEncoding=UTF8&rewriteBatchedStatements=true&allowMultiQueries=true&useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=1234


spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,wall,log4j
spring.datasource.druid.filter.stat.log-slow-sql=true



#TK Mybatis\u914D\u7F6E
tk.mybatis.type-aliases-package=com.jzg.demo.service.model
tk.mybatis.mapper-locations=classpath:mapper/*.xml
tk.mybatis.base-package=com.jzg.demo.service.dao
tk.mybatis.mappers[0]=com.jzg.framework.dao.MysqlBaseDao
tk.mybatis.mappers[1]=tk.mybatis.mapper.common.Mapper

#pagehelper\u5206\u9875\u63D2\u4EF6
pagehelper.return-page-info=check
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql