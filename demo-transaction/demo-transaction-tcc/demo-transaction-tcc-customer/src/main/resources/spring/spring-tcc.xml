<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--<context:component-scan base-package="com.jzg.demo.transaction.tcc.stock"/>-->

    <!--<util:properties id="tccJdbc" location="classpath:tccjdbc.properties"/>-->

    <bean class="org.mengyun.tcctransaction.spring.recover.DefaultRecoverConfig">
        <property name="maxRetryCount" value="30"/>
        <property name="recoverDuration" value="60"/>
        <property name="cronExpression" value="0/30 * * * * ?"/>
    </bean>

    <bean id="transactionRepository"
          class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="tccDataSource"/>
        <property name="domain" value="CUSTOMER"/>
        <property name="tbSuffix" value="_CUSTOMER"/>
    </bean>

    <!--<bean id="tccDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClass" value="#{tccjdbc['jdbc.driverClassName']}"/>
        <property name="jdbcUrl" value="#{tccjdbc['tcc.jdbc.url']}"/>
        <property name="user" value="#{tccjdbc['jdbc.username']}"/>
        <property name="password" value="#{tccjdbc['jdbc.password']}"/>
        <property name="initialPoolSize" value="#{tccjdbc['c3p0.initialPoolSize']}"/>
        <property name="minPoolSize" value="#{tccjdbc['c3p0.minPoolSize']}"/>
        <property name="maxPoolSize" value="#{tccjdbc['c3p0.maxPoolSize']}"/>
        <property name="acquireIncrement" value="#{tccjdbc['c3p0.acquireIncrement']}"/>
        <property name="maxIdleTime" value="#{tccjdbc['c3p0.maxIdleTime']}"/>
        <property name="checkoutTimeout" value="#{tccjdbc['c3p0.checkoutTimeout']}"/>
    </bean>-->

    <bean id="tccDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${tcc.jdbc.driverClassName}" />
        <property name="url" value="${tcc.jdbc.url}" />
        <property name="username" value="${tcc.jdbc.username}" />
        <property name="password" value="${tcc.jdbc.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxActive" value="${jdbc.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,log4j" />
    </bean>



    <!--<bean id="transactionRepository" class="org.mengyun.tcctransaction.repository.RedisTransactionRepository">-->
    <!--<property name="keyPrefix" value="TCC:CAP:"/>-->
    <!--<property name="jedisPool" ref="jedisPool"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="1000"/>-->
    <!--<property name="maxWaitMillis" value="1000"/>-->
    <!--</bean>-->

    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
    <!--<constructor-arg index="1" value="127.0.0.1"/>-->
    <!--<constructor-arg index="2" value="6379" type="int"/>-->
    <!--<constructor-arg index="3" value="1000" type="int"/>-->
    <!--<constructor-arg index="4" type="java.lang.String">-->
    <!--<null/>-->
    <!--</constructor-arg>-->
    <!--<constructor-arg index="5" value="0" type="int"/>-->
    <!--</bean>-->

</beans>