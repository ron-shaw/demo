<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzg.demo.transaction.tcc.customer.dao.CustomerBalanceMapper">
  <resultMap id="BaseResultMap" type="com.jzg.demo.transaction.tcc.customer.model.CustomerBalance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="valid_amount" jdbcType="DECIMAL" property="validAmount" />
    <result column="frozen_amount" jdbcType="DECIMAL" property="frozenAmount" />
    <result column="indate" jdbcType="TIMESTAMP" property="indate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, customer_id, amount, valid_amount, frozen_amount, indate
  </sql>
  <select id="selectByExample" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `customer_balance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `customer_balance`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `customer_balance`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalanceExample">
    delete from `customer_balance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `customer_balance` (customer_id, amount, valid_amount, 
      frozen_amount, indate)
    values (#{customerId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{validAmount,jdbcType=DECIMAL}, 
      #{frozenAmount,jdbcType=DECIMAL}, #{indate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `customer_balance`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="validAmount != null">
        valid_amount,
      </if>
      <if test="frozenAmount != null">
        frozen_amount,
      </if>
      <if test="indate != null">
        indate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="validAmount != null">
        #{validAmount,jdbcType=DECIMAL},
      </if>
      <if test="frozenAmount != null">
        #{frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="indate != null">
        #{indate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalanceExample" resultType="java.lang.Long">
    select count(*) from `customer_balance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `customer_balance`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.validAmount != null">
        valid_amount = #{record.validAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.frozenAmount != null">
        frozen_amount = #{record.frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.indate != null">
        indate = #{record.indate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `customer_balance`
    set id = #{record.id,jdbcType=BIGINT},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      valid_amount = #{record.validAmount,jdbcType=DECIMAL},
      frozen_amount = #{record.frozenAmount,jdbcType=DECIMAL},
      indate = #{record.indate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalance">
    update `customer_balance`
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="validAmount != null">
        valid_amount = #{validAmount,jdbcType=DECIMAL},
      </if>
      <if test="frozenAmount != null">
        frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="indate != null">
        indate = #{indate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzg.demo.transaction.tcc.customer.model.CustomerBalance">
    update `customer_balance`
    set customer_id = #{customerId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      valid_amount = #{validAmount,jdbcType=DECIMAL},
      frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
      indate = #{indate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="getCustomerBalanceByCustomerId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `customer_balance`
    where customer_id = #{customerId}
  </select>

  <update id="frozenBalance">
    update `customer_balance`
    set valid_amount = valid_amount - #{frozenAmount}, frozen_amount = frozen_amount + #{frozenAmount},
    where customer_id = #{customerId} and valid_amount > #{frozenAmount}
  </update>

  <update id="confirmDecrBalance">
    update `customer_balance`
    set amount = amount - #{frozenAmount}, frozen_amount = frozen_amount - #{frozenAmount}
    where customer_id = #{customerId} and amount >= #{frozenAmount} and frozen_amount >= #{frozenAmount}
  </update>

  <update id="cancelFrozenBalance">
    update `customer_balance`
    set valid_amount = valid_amount + #{frozenAmount}, frozen_amount = frozen_amount - #{frozenAmount},
    where customer_id = #{customerId} and frozen_amount >= #{frozenAmount}
  </update>

  <update id="decrBalance">
    update `customer_balance`
    set amount = amount - #{amount}, valid_amount = valid_amount - #{amount}
    where customer_id = #{customerId} and amount >= #{amount} and valid_amount >= #{amount}
  </update>

  <update id="incrBalance">
    update `customer_balance`
    set amount = amount + #{amount}, valid_amount = valid_amount + #{amount}
    where customer_id = #{customerId}
  </update>
</mapper>